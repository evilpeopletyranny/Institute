Turbo Assembler	 Version 2.51	     11/22/21 14:07:29	    Page 1
lab2com.asm



      1				     ;Лабораторная работа №2
      2				     ;Односегментная программа
      3	0000			     .model tiny
      4	0000			     .code
      5				     org 100h
      6
      7	0100			     _main:
      8					     print macro string	     ;вывод строки
      9						     push ax
     10						     push dx
     11						     mov dx,offset string
     12						     mov ah,9
     13						     int 21h
     14						     pop dx
     15						     pop ax
     16					     endm
     17
     18					     input macro string	     ;ввод строки
     19						     push ax
     20						     push dx
     21						     mov ah,0ah
     22						     mov dx,offset string
     23						     int 21h
     24						     pop dx
     25						     pop ax
     26					     endm
     27
     28				     ;Начало программы
     29					     print hello
1    30	0100  50				     push ax
1    31	0101  52				     push dx
1    32	0102  BA 0166r				     mov dx,offset hello
1    33	0105  B4 09				     mov ah,9
1    34	0107  CD 21				     int 21h
1    35	0109  5A				     pop dx
1    36	010A  58				     pop ax
     37					     print enter_please
1    38	010B  50				     push ax
1    39	010C  52				     push dx
1    40	010D  BA 017Dr				     mov dx,offset enter_please
1    41	0110  B4 09				     mov ah,9
1    42	0112  CD 21				     int 21h
1    43	0114  5A				     pop dx
1    44	0115  58				     pop ax
     45
     46					     input str_in
1    47	0116  50				     push ax
1    48	0117  52				     push dx
1    49	0118  B4 0A				     mov ah,0ah
1    50	011A  BA 0196r				     mov dx,offset str_in
1    51	011D  CD 21				     int 21h
1    52	011F  5A				     pop dx
1    53	0120  58				     pop ax
     54
     55	0121  BE 0197r			     mov si, offset str_in  + 1
     56	0124  BF 01AEr			     mov di, offset str_out
     57
Turbo Assembler	 Version 2.51	     11/22/21 14:07:29	    Page 2
lab2com.asm



     58	0127  8A 0C			     mov cl, [si]
     59	0129  D0 C9			     ror cl, 1	     ;работаем со словами -> счетчик в	2 раза  +
     60				     меньше
     61	012B  46			     inc si
     62
     63	012C			     _loop:  ;Внешний цикл на кол-во слов
     64	012C  8B 04			     mov ax, [si]
     65	012E  51			     push cx	     ;прячем текущий счетчик в стэк
     66	012F  B9 0010			     mov cx, 16	 ;заводим счетчик	на 16	бит = 2 байта =	слово
     67	0132  32 DB			     xor bl, bl
     68
     69	0134			     _inner_loop:    ;внутренний цикл на 16 бит
     70	0134  D1 C8			     ror ax,1
     71	0136  80 D3 00			     adc bl,0
     72	0139  E2 F9			     loop _inner_loop
     73
     74	013B  83 FB 08			     cmp bx, 8		     ;если единиц 8 или больше
     75	013E  74 04			     je	_next_val    ;то не	записываем слово	и переходим к    +
     76				     следущему
     77
     78	0140  89 05			     mov [di], ax    ;иначе записываем слово
     79	0142  47			     inc di
     80	0143  47			     inc di
     81
     82	0144			     _next_val:			     ;переход к	следущему слову
     83	0144  59			     pop cx
     84	0145  46			     inc si
     85	0146  46			     inc si
     86	0147  E2 E3			     loop _loop
     87
     88					     print result
1    89	0149  50				     push ax
1    90	014A  52				     push dx
1    91	014B  BA 0189r				     mov dx,offset result
1    92	014E  B4 09				     mov ah,9
1    93	0150  CD 21				     int 21h
1    94	0152  5A				     pop dx
1    95	0153  58				     pop ax
     96					     print str_out   ;вывод полученного	значения
1    97	0154  50				     push ax
1    98	0155  52				     push dx
1    99	0156  BA 01AEr				     mov dx,offset str_out
1   100	0159  B4 09				     mov ah,9
1   101	015B  CD 21				     int 21h
1   102	015D  5A				     pop dx
1   103	015E  58				     pop ax
    104
    105	015F  CD 21			     int 21h
    106	0161  B8 4C00			     mov ax,4c00h
    107	0164  CD 21			     int 21h
    108
    109
    110
    111	0166  0A 0D 4C 61 62 6F	72+	     hello db 10,13, 'Laboratoty work #2', 10, 13, '$'
    112	      61 74 6F 74 79 20	77+
    113	      6F 72 6B 20 23 32	0A+
    114	      0D 24
Turbo Assembler	 Version 2.51	     11/22/21 14:07:29	    Page 3
lab2com.asm



    115	017D  0A 0D 49 6E 70 75	74+	     enter_please db 10,13,'Input: ', 10, 13, '$'
    116	      3A 20 0A 0D 24
    117	0189  0A 0D 4F 75 74 70	75+	     result db 10,13,'Output: ', 10,13,'$'
    118	      74 3A 20 0A 0D 24
    119
    120	0196  0014 0000	0A*(003F)	     str_in  dw	20, (?), 0Ah dup ("?")
    121	01AE  14*(0020)	0024		     str_out dw	20 dup (' '), '$'
    122				     end _main
Turbo Assembler	 Version 2.51	     11/22/21 14:07:29	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "11/22/21"
??FILENAME			  Text	 "lab2com "
??TIME				  Text	 "14:07:29"
??VERSION			  Number 0205
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 LAB2COM
@MODEL				  Text	 1
@WORDSIZE			  Text	 2
ENTER_PLEASE			  Byte	 DGROUP:017D
HELLO				  Byte	 DGROUP:0166
RESULT				  Byte	 DGROUP:0189
STR_IN				  Word	 DGROUP:0196
STR_OUT				  Word	 DGROUP:01AE
_INNER_LOOP			  Near	 DGROUP:0134
_LOOP				  Near	 DGROUP:012C
_MAIN				  Near	 DGROUP:0100
_NEXT_VAL			  Near	 DGROUP:0144

Macro Name

INPUT
PRINT

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01D8 Word	  Public  CODE
