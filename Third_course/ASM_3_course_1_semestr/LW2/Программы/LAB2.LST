Turbo Assembler	 Version 2.51	     11/22/21 14:38:15	    Page 1
lab2.asm



      1	0000			     d1	SEGMENT	para public 'DATA'
      2	0000  0A 0D 4C 61 62 6F	72+	     hello db 10,13, 'Laboratoty work #2', 10, 13, '$'
      3	      61 74 6F 74 79 20	77+
      4	      6F 72 6B 20 23 32	0A+
      5	      0D 24
      6	0017  0A 0D 49 6E 70 75	74+	     enter_please db 10,13,'Input: ', 10, 13, '$'
      7	      3A 20 0A 0D 24
      8	0023  0A 0D 4F 75 74 70	75+	     result db 10,13,'Output: ', 10,13,'$'
      9	      74 3A 20 0A 0D 24
     10
     11	0030  0014 0000	0A*(003F)	     str_in  dw	20, (?), 0Ah dup ("?")
     12	0048  14*(0020)	0024		     str_out dw	20 dup (' '), '$'
     13	0072			     d1	ENDS
     14
     15	0000			     e1	SEGMENT	para public 'DATA'
     16						     print macro string	     ;вывод строки
     17						     push ax
     18						     push dx
     19						     mov dx,offset string
     20						     mov ah,9
     21						     int 21h
     22						     pop dx
     23						     pop ax
     24					     endm
     25
     26					     input macro string	     ;ввод строки
     27						     push ax
     28						     push dx
     29						     mov ah,0ah
     30						     mov dx,offset string
     31						     int 21h
     32						     pop dx
     33						     pop ax
     34					     endm
     35	0000			     e1	ENDS
     36
     37	0000			     s1	SEGMENT	para 'CODE'
     38				     assume cs:s1, ds:d1, es:e1, ss:stack1
     39	0000			     _main:
     40	0000  B8 0000s			     mov ax,d1
     41	0003  8E D8			     mov ds, ax
     42
     43	0005  B8 0000s			     mov ax, e1
     44	0008  8E C0			     mov es, ax
     45
     46					     ;Начало программы
     47					     print hello
1    48	000A  50				     push ax
1    49	000B  52				     push dx
1    50	000C  BA 0000r				     mov dx,offset hello
1    51	000F  B4 09				     mov ah,9
1    52	0011  CD 21				     int 21h
1    53	0013  5A				     pop dx
1    54	0014  58				     pop ax
     55					     print enter_please
1    56	0015  50				     push ax
1    57	0016  52				     push dx
Turbo Assembler	 Version 2.51	     11/22/21 14:38:15	    Page 2
lab2.asm



1    58	0017  BA 0017r				     mov dx,offset enter_please
1    59	001A  B4 09				     mov ah,9
1    60	001C  CD 21				     int 21h
1    61	001E  5A				     pop dx
1    62	001F  58				     pop ax
     63
     64					     input str_in
1    65	0020  50				     push ax
1    66	0021  52				     push dx
1    67	0022  B4 0A				     mov ah,0ah
1    68	0024  BA 0030r				     mov dx,offset str_in
1    69	0027  CD 21				     int 21h
1    70	0029  5A				     pop dx
1    71	002A  58				     pop ax
     72
     73	002B  BE 0031r			     mov si, offset str_in  + 1
     74	002E  BF 0048r			     mov di, offset str_out
     75
     76	0031  8A 0C			     mov cl, [si]
     77	0033  D0 C9			     ror cl, 1	     ;работаем со словами -> счетчик в	2 раза  +
     78				     меньше
     79	0035  46			     inc si
     80
     81	0036				     _loop:  ;Внешний цикл на кол-во слов
     82	0036  8B 04			     mov ax, [si]
     83	0038  51			     push cx	     ;прячем текущий счетчик в стэк
     84	0039  B9 0010			     mov cx, 16	 ;заводим счетчик	на 16	бит = 2 байта =	слово
     85	003C  32 DB			     xor bl, bl
     86
     87	003E			     _inner_loop:    ;внутренний цикл на 16 бит
     88	003E  D1 C8			     ror ax,1
     89	0040  80 D3 00			     adc bl,0
     90	0043  E2 F9			     loop _inner_loop
     91
     92	0045  83 FB 08			     cmp bx, 8		     ;если единиц 8 или больше
     93	0048  74 04			     je	_next_val    ;то не	записываем слово	и переходим к    +
     94				     следущему
     95
     96	004A  89 05			     mov [di], ax    ;иначе записываем слово
     97	004C  47			     inc di
     98	004D  47			     inc di
     99
    100	004E			     _next_val:			     ;переход к	следущему слову
    101	004E  59			     pop cx
    102	004F  46			     inc si
    103	0050  46			     inc si
    104	0051  E2 E3			     loop _loop
    105
    106					     print result
1   107	0053  50				     push ax
1   108	0054  52				     push dx
1   109	0055  BA 0023r				     mov dx,offset result
1   110	0058  B4 09				     mov ah,9
1   111	005A  CD 21				     int 21h
1   112	005C  5A				     pop dx
1   113	005D  58				     pop ax
    114					     print str_out   ;вывод полученного	значения
Turbo Assembler	 Version 2.51	     11/22/21 14:38:15	    Page 3
lab2.asm



1   115	005E  50				     push ax
1   116	005F  52				     push dx
1   117	0060  BA 0048r				     mov dx,offset str_out
1   118	0063  B4 09				     mov ah,9
1   119	0065  CD 21				     int 21h
1   120	0067  5A				     pop dx
1   121	0068  58				     pop ax
    122
    123	0069  CD 21			     int 21h
    124	006B  B8 4C00			     mov ax,4c00h
    125	006E  CD 21			     int 21h
    126	0070			     s1	ENDS
    127
    128	0000			     stack1 SEGMENT para stack 'stack'
    129	0000  64*(????)			     dw	100 dup	(?)
    130	00C8			     stack1 ends
    131
    132				     END _main
Turbo Assembler	 Version 2.51	     11/22/21 14:38:15	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "11/22/21"
??FILENAME			  Text	 "lab2	  "
??TIME				  Text	 "14:38:15"
??VERSION			  Number 0205
@CPU				  Text	 0101H
@CURSEG				  Text	 STACK1
@FILENAME			  Text	 LAB2
@WORDSIZE			  Text	 2
ENTER_PLEASE			  Byte	 D1:0017
HELLO				  Byte	 D1:0000
RESULT				  Byte	 D1:0023
STR_IN				  Word	 D1:0030
STR_OUT				  Word	 D1:0048
_INNER_LOOP			  Near	 S1:003E
_LOOP				  Near	 S1:0036
_MAIN				  Near	 S1:0000
_NEXT_VAL			  Near	 S1:004E

Macro Name

INPUT
PRINT

Groups & Segments		  Bit Size Align  Combine Class

D1				  16  0072 Para	  Public  DATA
E1				  16  0000 Para	  Public  DATA
S1				  16  0070 Para	  none	  CODE
STACK1				  16  00C8 Para	  Stack	  STACK
